@using bikeRental.Application;
@using bikeRental.Application.Models.Order;
@model bikeRental.Application.Models.Order.OrderModel

@{
    ViewData["Title"] = "Orders";
}



@ViewData["CurrentCategory"]
<div class="container px-4 pt-2">
<h2>Orders</h2>
<div class="container">
    <div class="row justify-content-between">
        <div class="col-6">
        <form asp-controller="Orders" asp-action="Index" asp-route-currentCategory="@ViewData["CurrentCategory"]" method="get">
            <div class="input-group">
                        <input type="datetime-local" name="searchDate" value="@ViewData["CurrentFilter"]" class="form-control"/>
                     <div class="input-group-append">
                         <button type="submit" class="btn btn-warning">Search <i class="bi bi-bicycle"></i></button>
                         <a class="btn btn-light" asp-action="Index">Back to Full List</a>
                     </div>
            </div>
        </form>
        </div>
        <div class="col-4">
        @if (User.Identity!.IsAuthenticated)
        {
            <div>

                <a class="btn btn-outline-success" asp-controller="Orders" asp-action="Create"><i class="bi bi-house-add"> Create new order</i></a>
            </div>
        }
        </div>
    </div>
</div>
@*
<table class="table table-hover mt-5 ">
    <tr>
            @foreach (var prop in typeof(OrderResponse).GetProperties())
            {
				@if (prop.Name != "Id" && prop.Name != "Bicycles")
                    {
                        <th>
                            @prop.Name
                            <a style="color:black" asp-action="Index" asp-route-sortOrder=@($"{prop.Name}Desc")><i class="bi bi-caret-up-fill"></i></a>
                            <a style="color:black" asp-action="Index" asp-route-sortOrder=@($"{prop.Name}")><i class="bi bi-caret-down-fill"></i></a>
						</th>
                    }
            }
			<th>
				Bicycles
			</th>
			@if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
            {   
                  <th>
                     Edit/Delete
                  </th>       
            }
           
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RentalStartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RentalEndTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RentalPrice)
            </td>
			<td>
					@if(item.NumberOfElectricBikes == 0 && item.NumberOfBikes==0)
					{
						<div class="d-inline-block" data-toggle="tooltip" data-placement="top" title="No bikes on this station">
							<a class="btn btn-outline-secondary disabled" style="pointer-events:none;" asp-controller="Bicycles" asp-action="GetByStation" asp-route-id="@item.Id ">
							<i class="bi bi-bicycle"></i>
						</a>
						</div>
					}
					else{
					<a class="btn btn-outline-secondary" asp-controller="Bicycles" asp-action="GetByStation" asp-route-id="@item.Id">
						<i class="bi bi-bicycle"></i>
					</a>
					}
				
			</td>
				@if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
            {
                    <td>
                        <a class="btn btn-outline-primary" asp-controller="Stations" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pen"></i></a> 
                        <a class="btn btn-outline-danger" asp-controller="Stations" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i></a>
                    </td> 
            }
        </tr> 
    }
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
    asp-controller="Orders"
   asp-route-currentCategory="@ViewData["CurrentCategory"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
    asp-controller="Orders"
   asp-route-currentCategory="@ViewData["CurrentCategory"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>*@
</div>

