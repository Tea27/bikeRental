@using bikeRental.Application;
@model PaginatedList<bikeRental.Application.Models.Station.StationResponse>

@{
    ViewData["Title"] = "Stations";
}

<h2>Stations</h2>

@ViewData["CurrentCategory"]

<div class="container">
    <div class="row justify-content-between">
        <div class="col-6">
        <form asp-controller="Stations" asp-action="GetAll" asp-route-currentCategory="@ViewData["CurrentCategory"]" method="get">
            <div class="input-group">
                     <input type="text" placeholder="Start typing address…" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control"/>
                     <div class="input-group-append">
                         <button type="submit" class="btn btn-warning">Search <i class="bi bi-bicycle"></i></button>
                         <a class="btn btn-light" asp-action="GetAll">Back to Full List</a>
                     </div>
            </div>
        </form>
        </div>
        <div class="col-4">
        @if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
        {
            <div>

                <a class="btn btn-outline-success" asp-controller="Stations" asp-action="Create"><i class="bi bi-house-add"> Create new station</i></a>
            </div>
        }
        </div>
    </div>
</div>

<table class="table table-hover mt-5">
    <tr>
            <th>
                 @Html.DisplayNameFor(modelItem => modelItem[0].Address)
            </th>
            <th>
                 @Html.DisplayNameFor(modelItem => modelItem[0].NumberOfBikes)
            </th>
            <th>
                 @Html.DisplayNameFor(modelItem => modelItem[0].NumberOfElectricBikes)
            </th>
             <th>
                 Edit/Delete
            </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfBikes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfElectricBikes)
            </td>
            @if (User.Identity!.IsAuthenticated && User.IsInRole("Administrator"))
            {
                    <td>
                        <a class="btn btn-outline-primary" asp-controller="Stations" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pen"></i></a> 
                        <a class="btn btn-outline-danger" asp-controller="Stations" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i></a>
                    </td> 
            }
        </tr> 
    }
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="GetAll"
    asp-controller="Stations"
   asp-route-currentCategory="@ViewData["CurrentCategory"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="GetAll"
    asp-controller="Stations"
   asp-route-currentCategory="@ViewData["CurrentCategory"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
